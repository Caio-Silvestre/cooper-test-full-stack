{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///F:/Coopers/coopers-test-front-end/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport axios from \"axios\";\nimport { JWT } from \"next-auth/jwt\";\nimport { Session } from \"next-auth\";\n\ntype CustomSession = Session & {\n  accessToken?: string;\n  error?: string;\n};\n\nasync function refreshAccessToken(token: JWT): Promise<JWT> {\n  try {\n    const response = await axios.post(\n      `${process.env.NEXT_PUBLIC_API_URL}/auth/refresh`,\n      {\n        refresh_token: token.refreshToken,\n      }\n    );\n    const data = response.data;\n    return {\n      ...token,\n      accessToken: data.access_token,\n      refreshToken: data.refresh_token ?? token.refreshToken,\n      accessTokenExpires: Date.now() + data.expires_in * 1000,\n      user: data.user ?? token.user,\n    };\n  } catch (error) {\n    console.log(error);\n    return { ...token, error: \"RefreshAccessTokenError\" };\n  }\n}\n\nconst handler = NextAuth({\n  providers: [\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        try {\n          const res = await axios.post(\n            `${process.env.NEXT_PUBLIC_API_URL}/auth/login`,\n            {\n              email: credentials?.email,\n              password: credentials?.password,\n            }\n          );\n          if (res.data && res.data.user && res.data.access_token) {\n            return {\n              ...res.data.user,\n              accessToken: res.data.access_token,\n              refreshToken: res.data.refresh_token,\n              accessTokenExpires: Date.now() + 60 * 60 * 1000, // 1h\n            };\n          }\n          return null;\n        } catch {\n          return null;\n        }\n      },\n    }),\n  ],\n  session: {\n    strategy: \"jwt\",\n    maxAge: 60 * 60, // 1h\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      // Login inicial\n      if (user) {\n        const customUser = user as typeof user & {\n          accessToken: string;\n          refreshToken: string;\n          accessTokenExpires: number;\n        };\n        return {\n          ...token,\n          accessToken: customUser.accessToken,\n          refreshToken: customUser.refreshToken,\n          accessTokenExpires: customUser.accessTokenExpires,\n          user: customUser,\n        };\n      }\n      // Token ainda v√°lido\n      if (Date.now() < (token.accessTokenExpires as number)) {\n        return token;\n      }\n      // Token expirado: tentar refresh\n      return await refreshAccessToken(token);\n    },\n    async session({ session, token }) {\n      const user = token.user as\n        | { name?: string; email?: string; image?: string }\n        | undefined;\n      session.user = {\n        name: user?.name,\n        email: user?.email,\n        image: user?.image,\n      };\n      const customSession: CustomSession = {\n        ...session,\n        accessToken: token.accessToken as string,\n        error: token.error as string,\n      };\n      return customSession;\n    },\n  },\n  pages: {\n    signIn: \"/\",\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n});\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AASA,eAAe,mBAAmB,KAAU;IAC1C,IAAI;QACF,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,gEAAmC,aAAa,CAAC,EACjD;YACE,eAAe,MAAM,YAAY;QACnC;QAEF,MAAM,OAAO,SAAS,IAAI;QAC1B,OAAO;YACL,GAAG,KAAK;YACR,aAAa,KAAK,YAAY;YAC9B,cAAc,KAAK,aAAa,IAAI,MAAM,YAAY;YACtD,oBAAoB,KAAK,GAAG,KAAK,KAAK,UAAU,GAAG;YACnD,MAAM,KAAK,IAAI,IAAI,MAAM,IAAI;QAC/B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC;QACZ,OAAO;YAAE,GAAG,KAAK;YAAE,OAAO;QAA0B;IACtD;AACF;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;IACvB,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAO;gBACtC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI;oBACF,MAAM,MAAM,MAAM,uIAAA,CAAA,UAAK,CAAC,IAAI,CAC1B,gEAAmC,WAAW,CAAC,EAC/C;wBACE,OAAO,aAAa;wBACpB,UAAU,aAAa;oBACzB;oBAEF,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;wBACtD,OAAO;4BACL,GAAG,IAAI,IAAI,CAAC,IAAI;4BAChB,aAAa,IAAI,IAAI,CAAC,YAAY;4BAClC,cAAc,IAAI,IAAI,CAAC,aAAa;4BACpC,oBAAoB,KAAK,GAAG,KAAK,KAAK,KAAK;wBAC7C;oBACF;oBACA,OAAO;gBACT,EAAE,OAAM;oBACN,OAAO;gBACT;YACF;QACF;KACD;IACD,SAAS;QACP,UAAU;QACV,QAAQ,KAAK;IACf;IACA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,gBAAgB;YAChB,IAAI,MAAM;gBACR,MAAM,aAAa;gBAKnB,OAAO;oBACL,GAAG,KAAK;oBACR,aAAa,WAAW,WAAW;oBACnC,cAAc,WAAW,YAAY;oBACrC,oBAAoB,WAAW,kBAAkB;oBACjD,MAAM;gBACR;YACF;YACA,qBAAqB;YACrB,IAAI,KAAK,GAAG,KAAM,MAAM,kBAAkB,EAAa;gBACrD,OAAO;YACT;YACA,iCAAiC;YACjC,OAAO,MAAM,mBAAmB;QAClC;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,MAAM,OAAO,MAAM,IAAI;YAGvB,QAAQ,IAAI,GAAG;gBACb,MAAM,MAAM;gBACZ,OAAO,MAAM;gBACb,OAAO,MAAM;YACf;YACA,MAAM,gBAA+B;gBACnC,GAAG,OAAO;gBACV,aAAa,MAAM,WAAW;gBAC9B,OAAO,MAAM,KAAK;YACpB;YACA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC","debugId":null}}]
}